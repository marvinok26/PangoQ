

=== File: bundle_code.py ===

import os

EXCLUDED_DIRS = {"node_modules", "vendor", "tests", "storage"}
EXCLUDED_EXTENSIONS = {".jpg", ".jpeg", ".png", ".gif", ".webp", ".pdf", ".xml"}
EXCLUDED_FILES = {"package-lock.json", "composer.lock"}
OUTPUT_FILE = "bundled_code.txt"

def is_hidden(path):
    return any(part.startswith('.') for part in path.split(os.sep))

def should_skip_file(filepath, root):
    filename = os.path.basename(filepath)
    ext = os.path.splitext(filename)[1].lower()

    # Skip hidden files
    if is_hidden(os.path.relpath(filepath)):
        return True

    # Skip excluded files and extensions
    if ext in EXCLUDED_EXTENSIONS or filename in EXCLUDED_FILES:
        return True

    # Skip files in excluded dirs
    for part in os.path.relpath(root).split(os.sep):
        if part in EXCLUDED_DIRS:
            return True

    # Skip empty files
    if os.path.getsize(filepath) == 0:
        return True

    return False

with open(OUTPUT_FILE, "w", encoding="utf-8") as output:
    for root, dirs, files in os.walk("."):
        # Skip hidden directories
        dirs[:] = [d for d in dirs if not d.startswith(".") and d not in EXCLUDED_DIRS]

        for file in files:
            filepath = os.path.join(root, file)
            if should_skip_file(filepath, root):
                continue
            try:
                with open(filepath, "r", encoding="utf-8") as f:
                    output.write(f"\n\n=== File: {os.path.relpath(filepath)} ===\n\n")
                    output.write(f.read())
            except Exception as e:
                print(f"Skipped {filepath} due to error: {e}")


=== File: database.sqlite ===



=== File: seeders/DatabaseSeeder.php ===

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    public function run(): void
    {
        $this->call([
            UserSeeder::class,
            DestinationSeeder::class,
        ]);
    }
}

=== File: seeders/UserSeeder.php ===

<?php

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\Hash;

class UserSeeder extends Seeder
{
    public function run(): void
    {
        // Create admin user
        User::create([
            'name' => 'Admin User',
            'email' => 'admin@example.com',
            'password' => Hash::make('password'),
            'role' => 'admin',
            'email_verified_at' => now(),
        ]);
        
        // Create regular user
        User::create([
            'name' => 'Test User',
            'email' => 'user@example.com',
            'password' => Hash::make('password'),
            'role' => 'user',
            'email_verified_at' => now(),
        ]);
    }
}

=== File: seeders/DestinationSeeder.php ===

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Destination;

class DestinationSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        // Clear existing destinations
        Destination::truncate();
        
        // Create sample destinations
        $destinations = [
            [
                'name' => 'Bali',
                'country' => 'Indonesia',
                'city' => 'Denpasar',
                'description' => 'A beautiful island paradise known for its stunning beaches, vibrant culture, and picturesque landscapes.',
                'image_url' => null, // Will use placeholder in the view
            ],
            [
                'name' => 'Paris',
                'country' => 'France',
                'city' => 'Paris',
                'description' => 'The City of Light, known for its art, fashion, gastronomy, and culture.',
                'image_url' => null,
            ],
            [
                'name' => 'Tokyo',
                'country' => 'Japan',
                'city' => 'Tokyo',
                'description' => 'A bustling metropolis that blends ultramodern and traditional, with neon-lit skyscrapers and historic temples.',
                'image_url' => null,
            ],
            [
                'name' => 'New York',
                'country' => 'United States',
                'city' => 'New York',
                'description' => 'The Big Apple, a global center for business, art, fashion, food, and entertainment.',
                'image_url' => null,
            ],
            [
                'name' => 'Barcelona',
                'country' => 'Spain',
                'city' => 'Barcelona',
                'description' => 'A vibrant city known for its stunning architecture, Mediterranean beaches, and rich cultural heritage.',
                'image_url' => null,
            ],
            [
                'name' => 'Cape Town',
                'country' => 'South Africa',
                'city' => 'Cape Town',
                'description' => 'A coastal city with dramatic scenery, including Table Mountain and beautiful beaches.',
                'image_url' => null,
            ],
            [
                'name' => 'Sydney',
                'country' => 'Australia',
                'city' => 'Sydney',
                'description' => 'Famous for its stunning harbor, iconic Opera House, and beautiful beaches.',
                'image_url' => null,
            ],
            [
                'name' => 'Rio de Janeiro',
                'country' => 'Brazil',
                'city' => 'Rio de Janeiro',
                'description' => 'Known for its spectacular beaches, Carnival, and the Christ the Redeemer statue.',
                'image_url' => null,
            ],
            [
                'name' => 'Marrakech',
                'country' => 'Morocco',
                'city' => 'Marrakech',
                'description' => 'A historic city with vibrant markets, gardens, and traditional architecture.',
                'image_url' => null,
            ],
            [
                'name' => 'Santorini',
                'country' => 'Greece',
                'city' => 'Thira',
                'description' => 'A stunning island with white-washed buildings, blue domes, and breathtaking sunsets.',
                'image_url' => null,
            ],
            [
                'name' => 'Kyoto',
                'country' => 'Japan',
                'city' => 'Kyoto',
                'description' => 'Japan\'s cultural capital, known for its classical Buddhist temples, gardens, and traditional wooden houses.',
                'image_url' => null,
            ],
            [
                'name' => 'Venice',
                'country' => 'Italy',
                'city' => 'Venice',
                'description' => 'A unique city built on a lagoon, famous for its canals, gondolas, and historic architecture.',
                'image_url' => null,
            ],
        ];
        
        // Insert destinations
        foreach ($destinations as $destination) {
            Destination::create($destination);
        }
    }
}

=== File: factories/UserFactory.php ===

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}


=== File: migrations/2025_04_20_143602_create_personal_access_tokens_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('personal_access_tokens', function (Blueprint $table) {
            $table->id();
            $table->morphs('tokenable');
            $table->string('name');
            $table->string('token', 64)->unique();
            $table->text('abilities')->nullable();
            $table->timestamp('last_used_at')->nullable();
            $table->timestamp('expires_at')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('personal_access_tokens');
    }
};

=== File: migrations/2025_04_20_143628_create_itineraries_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('itineraries', function (Blueprint $table) {
            $table->id();
            $table->foreignId('trip_id')->constrained()->onDelete('cascade');
            $table->string('title');
            $table->text('description')->nullable();
            $table->integer('day_number');
            $table->date('date');
            $table->timestamps();

            // A trip can only have one itinerary per day
            $table->unique(['trip_id', 'day_number']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('itineraries');
    }
};

=== File: migrations/2025_04_20_143636_create_activities_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('activities', function (Blueprint $table) {
            $table->id();
            $table->foreignId('itinerary_id')->constrained()->onDelete('cascade');
            $table->string('title');
            $table->text('description')->nullable();
            $table->string('location')->nullable();
            $table->time('start_time')->nullable();
            $table->time('end_time')->nullable();
            $table->decimal('cost', 10, 2)->nullable();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('activities');
    }
};

=== File: migrations/2025_05_06_120545_create_destinations_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('destinations', function (Blueprint $table) {
            $table->id();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('destinations');
    }
};


=== File: migrations/2025_04_20_143610_create_trips_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('trips', function (Blueprint $table) {
            $table->id();
            $table->foreignId('creator_id')->constrained('users')->onDelete('cascade');
            $table->string('title');
            $table->text('description')->nullable();
            $table->string('destination');
            $table->date('start_date');
            $table->date('end_date');
            $table->decimal('budget', 10, 2)->nullable();
            $table->enum('status', ['planning', 'active', 'completed'])->default('planning');
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('trips');
    }
};

=== File: migrations/2025_04_30_120741_fix_password_reset_tokens_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('password_reset_tokens', function (Blueprint $table) {
            //
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('password_reset_tokens', function (Blueprint $table) {
            //
        });
    }
};


=== File: migrations/2025_04_20_204409_create_sessions_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('sessions');
    }
};

=== File: migrations/2025_04_20_143652_create_wallet_transactions_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('wallet_transactions', function (Blueprint $table) {
            $table->id();
            $table->foreignId('wallet_id')->constrained('savings_wallets')->onDelete('cascade');
            $table->foreignId('user_id')->constrained()->onDelete('cascade');
            $table->enum('type', ['deposit', 'withdrawal']);
            $table->decimal('amount', 10, 2);
            $table->enum('status', ['pending', 'completed', 'failed'])->default('completed');
            $table->string('payment_method')->nullable();
            $table->string('transaction_reference')->nullable();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('wallet_transactions');
    }
};

=== File: migrations/0001_01_01_000002_create_jobs_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};


=== File: migrations/2025_04_20_143511_create_password_reset_tokens_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('password_reset_tokens');
    }
};

=== File: migrations/0001_01_01_000001_create_cache_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};


=== File: migrations/2025_04_30_120741_fix_personal_access_tokens_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('personal_access_tokens', function (Blueprint $table) {
            //
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('personal_access_tokens', function (Blueprint $table) {
            //
        });
    }
};


=== File: migrations/2025_04_20_143710_create_notifications_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('notifications', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained()->onDelete('cascade');
            $table->string('type');
            $table->string('title');
            $table->text('message');
            $table->timestamp('read_at')->nullable();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('notifications');
    }
};

=== File: migrations/2025_04_20_143644_create_savings_wallets_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('savings_wallets', function (Blueprint $table) {
            $table->id();
            $table->foreignId('trip_id')->constrained()->onDelete('cascade');
            $table->string('name');
            $table->decimal('target_amount', 10, 2);
            $table->decimal('current_amount', 10, 2)->default(0);
            $table->date('target_date')->nullable();
            $table->enum('contribution_frequency', ['weekly', 'monthly'])->default('weekly');
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('savings_wallets');
    }
};

=== File: migrations/2025_04_20_143700_create_destinations_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('destinations', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('country');
            $table->string('city')->nullable();
            $table->text('description')->nullable();
            $table->string('image_url')->nullable();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('destinations');
    }
};

=== File: migrations/2025_04_20_143619_create_trip_members_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('trip_members', function (Blueprint $table) {
            $table->id();
            $table->foreignId('trip_id')->constrained()->onDelete('cascade');
            $table->foreignId('user_id')->nullable()->constrained()->onDelete('cascade');
            $table->enum('role', ['organizer', 'member'])->default('member');
            $table->enum('invitation_status', ['pending', 'accepted', 'declined'])->default('pending');
            $table->string('invitation_email')->nullable();
            $table->timestamps();

            // One user can only be added once to a trip
            $table->unique(['trip_id', 'user_id']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('trip_members');
    }
};

=== File: migrations/0001_01_01_000000_create_users_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->string('phone_number')->nullable();
            $table->string('profile_photo')->nullable();
            $table->enum('role', ['user', 'admin'])->default('user');
            $table->rememberToken();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('users');
    }
};

=== File: migrations/2025_05_06_115022_create_destinations_table.php ===

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
{
    Schema::create('destinations', function (Blueprint $table) {
        $table->id();
        $table->string('name');
        $table->string('country')->nullable();
        $table->string('city')->nullable();
        $table->text('description')->nullable();
        $table->string('image_url')->nullable();
        $table->timestamps();
    });
}

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('destinations');
    }
};
