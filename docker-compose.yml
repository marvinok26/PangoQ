services:
  pangoq:
    build: .
    container_name: pangoq-app
    ports:
      - "8000:8000"  # Changed from 8001:8000 to 8000:8000
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_DATABASE: pango_q
      DB_USERNAME: root
      DB_PASSWORD: 12345678      # Match MySQL container password
      REDIS_HOST: redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    networks:
      - pangoq-network

  mysql:
    image: mysql:8.0
    container_name: pangoq-mysql
    ports:
      - "3307:3306"  # Use 3307 to avoid conflict with host MySQL
    environment:
      MYSQL_ROOT_PASSWORD: 12345678    # Consistent password
      MYSQL_DATABASE: pango_q
      MYSQL_ROOT_HOST: '%'             # Allow root from any host
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p12345678"]
      timeout: 20s
      retries: 10
      interval: 10s
    networks:
      - pangoq-network

  redis:
    image: redis:7-alpine
    container_name: pangoq-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pangoq-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: pangoq-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: 12345678         # Consistent password
    depends_on:
      - mysql
    networks:
      - pangoq-network

volumes:
  mysql_data:
  redis_data:

networks:
  pangoq-network:
    driver: bridge